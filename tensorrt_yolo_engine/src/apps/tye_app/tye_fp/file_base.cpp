//--------------------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------------------

#include "file_base.h"

//-- constructor(s) --------------------------------------------------------------------------------------------------------

file_base::file_base( std::string file_path )
{
    // initialize
    this_file_path = file_path;
    this_is_loaded = false;

    return;
}

//-- destructor ------------------------------------------------------------------------------------------------------------

file_base::~file_base( void ) { return; }

//-- public methods --------------------------------------------------------------------------------------------------------

// get path to file
std::string file_base::get_file_path( void ) { return ( this_file_path ); }

//-- protected methods -----------------------------------------------------------------------------------------------------

// check if a path exists
bool file_base::path_exists( const std::string &path ) { return ( access(path.c_str(), F_OK) == 0 ); }

//--------------------------------------------------------------------------------------------------------------------------

// check if a path is a file
bool file_base::path_is_file( const std::string &path )
{
    struct stat file_info = {};

    if ( ! path_exists(path) ) { return false; }

    return ( (stat(path.c_str(), &file_info) == 0) && S_ISREG(file_info.st_mode) );
}

//--------------------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------------------
